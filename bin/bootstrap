#!/usr/bin/env bash
# vim: ft=sh
#
# NOTE: this script is DEPRECATED and is obsoleted by bin/bashmatic-install
#       it is provided here for backwards compatibility only.
set -e

export clr='\e[0m'       # Text Reset
export bldblk='\e[1;30m' # Black - Bold
export bldred='\e[1;31m' # Red
export bldgrn='\e[1;32m' # Green
export bldylw='\e[1;33m' # Yellow
export bldblu='\e[1;34m' # Blue
export bldpur='\e[1;35m' # Purple
export bldcyn='\e[1;36m' # Cyan
export bldwht='\e[1;37m' # White

puts() {
  printf "${bldgrn}✓   ${bldblu}${*}${clr}\n"
}

err() {
  printf "${bldred}ERROR:\n"
  for s in "${@}"; do
    printf "${bldred}✘   ${bldylw}${s}${clr}\n"
  done
}

command -v git >/dev/null || {
  OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
  if [[ "${OS}" == "darwin" ]]; then
    puts "Please install xcode command line tools, "
    puts "by running: xcode-select --install"
  elif [[ "${OS}" == "linux" ]]; then
    puts "Please install Git."
    puts "eg. apt-get install git"
  fi
  exit 1
}

bashmatic.git.sync() {
  cd "${BASHMATIC_HOME}" >/dev/null
  [[ -d ".git" ]] || return

  if [[ -n $(git status -s) ]]; then
    err "Looks like your .bashmatic folder exists, and has some locally modified files." \
      "Please commit, stash or remove those files, and re-run this setup." \
      "Folder: ${bldpur}${BASHMATIC_HOME}, ${bldylw}git status:"
    echo
    git status -s -u
    echo
    exit 1
  fi

  (git checkout main && git pull --rebase) >/dev/null

  cd - >/dev/null
}

export HOME=${HOME:-"/"}
export BASHMATIC_HOME="${HOME}/.bashmatic"
export BASHMATIC_INIT="${HOME}/.bashmatic/init.sh"
export BASHMATIC_URL="https://github.com/kigster/bashmatic"

puts "WARNING: ${bldred}This script is now deprecated and will be removed eventually."
puts "         ${bldred}Please use the following to install Bashmatic moving forward:"
puts "         ${bldylw}bash -c \"\$(curl -fsSL https://bashmatic.re1.re); bashmatic-install -v\""
sleep 2

if [[ -d ${BASHMATIC_HOME} && -f ${BASHMATIC_HOME}/init.sh ]]; then
  bashmatic.git.sync
else
  git clone "${BASHMATIC_URL}" "${BASHMATIC_HOME}" >/dev/null
fi

if [[ -s "${BASHMATIC_INIT}" ]]; then
  # shellcheck disable=SC1090
  source "${BASHMATIC_INIT}"
  bashmatic.load-at-login
  success "Your BashMatic has been successfully installed."
  exit 0
else
  err "Bashmatic did not install correctly, please run the following command by hand:"
  err "${bldgrn}git clone ${BASHMATIC_URL} ${BASHMATIC_HOME}"
  exit 1
fi

