#!/usr/bin/env bash
# vim: ft=sh
# Bashmatic Utilities
# © 2016-2020 Konstantin Gredeskoul, All rights reserved. MIT License.
# Distributed under the MIT LICENSE.

# shellcheck disable=2046
export BASHMATIC_HOME="$(cd $(dirname "${BASH_SOURCE[0]:-${(%):-%x}}") || exit 1; pwd -P)"
source "${BASHMATIC_INIT}"

function setup() {
  [[ -n $(command -V gawk) ]] || brew.install.package gawk
  [[ -n $(command -V kramdoc) ]] || gem.install kramdoc
}

# NOT USED
function replace-shdoc() {
  run "rm -f bin/shdoc"
  (cd bin &&
    curl -fsSL https://raw.githubusercontent.com/reconquest/shdoc/master/shdoc -o - |
    sed 's#/usr/bin/gawk#/usr/local/bin/gawk#g' >shdoc && cd -) >/dev/null
  run "chmod 755 bin/shdoc"
}

function generate() {
  local out=USAGE.md
  local tmp="$(mktemp -t docs)"

  # shellcheck disable=2207
  local -a files=($(ls -1 lib/*.sh))
  for file in "${files[@]}"; do
    lib=$(echo "${file}" | sed 's/lib\///g;s/\.sh$//g')
    local docs=$(bin/shdoc "${file}" | sed '/^\s*$/d')
    [[ -z ${docs} ]] && {
      printf "${txtred}%s" "⊗"
      continue
    }

    printf "\n%s\n" "## Module **${lib}**" >>${out}
    bin/shdoc <"${file}" | sed 's/##/###/g' >"${tmp}"
    if [[ -n $(cat "${tmp}") ]]; then
      cat "${tmp}" >>${out}
      printf "${txtgrn}%s" "✔"
    fi
  done
  echo

  printf \
    "\n\n" \
    '"""' \
    "\n\n" \
    "## Copyright & License\n\n" \
    " * Copyright © 2017-2020 Konstantin Gredeskoul, All rights reserved.\n" \
    " * Distributed under MIT License.\n\n" >>$out

  sed -i'' 's/```/```bash/g' "${out}"
  adoc="${out/md/adoc}"
  run "rm -f ${adoc}"
  run "kramdoc ${out}"
  [[ -f ${adoc} ]] && run "rm -f ${out}"
  append.adoc.metadata "${adoc}"
}

function append.adoc.metadata() {
  local adoc="${1}"
  local temp=$(mktemp -t adoc)
  (
    printf "= Bashmatic© Version $(cat .version)\n"
    printf ":doctype: article\n:allow-uri-read:\n:toc:\n:toclevels: 5\n:sectnums:\n:showtitle:\n\n"
    printf "NOTE: https://github.com/reconquest/shdoc[shdoc] documentation "
    printf "extracted from the Bashmatic Sources.\n"
    printf "\n'''\n"
  ) >${temp}
  tail +3 "${adoc}" | sed -E 's/^= (.*)$/==== \
\1 \
==== \
/g' | cat >>${temp}
  run "mv ${temp} ${adoc}"
  run "asciidoctor-pdf ${adoc}"
}

main() {
  setup
  generate
  open USAGE.pdf
}

main "$@"
